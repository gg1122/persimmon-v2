/**
 * Created by Mr.Cong on 2015/9/2.
 */

/**
 * 本地化存储类
 * @param key
 * @param fn
 */
function storageBP() {
};
//缓存操作
storageBP.prototype = {
    S: function (key, value) {
        //SET
        if (value != undefined) {
            var data = JSON.stringify(value);
            if (window.localStorage) {
                localStorage.setItem(key, data);
            } else {
                setCookie(key, data, 2);
            }
        }
        //GET
        if (value == undefined) {
            if (window.localStorage) {
                var data = localStorage.getItem(key);
                return data && JSON.parse(data);
            } else {
                var data = this.getCookie(key);
                return data && JSON.parse(data);
            }
        }
        //CLEAR
        if (value == null) {
            if (window.localStorage) {
                localStorage.clear(key);
            } else {
                this.clearCookie(key);
            }
        }
    },
    //设置cookie
    setCookie: function (key, value, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires=" + d.toUTCString();
        document.cookie = key + "=" + value + "; " + exdays;
    },
    //获取cookie
    getCookie: function (key) {
        var name = key + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1);
            if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
        }
        return "";
    },
    //清除cookie
    clearCookie: function (key) {
        this.setCookie(key, "", -1);
    }
};
//实例化为全局变量
var storageBP = new storageBP();